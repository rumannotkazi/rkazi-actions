name: Check Dependencies

on:
  workflow_dispatch:
    inputs:
      repositories-file:
        description: 'Path to the file that contains the repositories to check'
        required: true
        default: 'repositories-to-check.txt'

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read repositories file
        id: read-repositories-file
        run: |
          ls
          echo "repositories=$(cat ${{ inputs.repositories-file }})" >> $GITHUB_ENV
          # export repositories=$(cat ${{ inputs.repositories-file }})
          printenv
     
      - name: Check dependencies
        id: check-dependencies
        env:
          repositories_col: ${{ env.repositories}}
        run: |
          for repository in $repositories_col; do
            git clone "https://github.com/$repository.git"
            cd "$(basename "$repository" .git)"
            gemspec_file=$(find . -type f -name '*.gemspec' -print -quit)
            if [[ -z $gemspec_file ]]; then
              echo "No .gemspec file found in $repository"
              exit 1
            fi
            
            gemspec_dependencies=($(grep "^ *spec.add_*" "$gemspec_file" | awk '{print $2, $3, $5}'))
            
            echo "$gemspec_file"

            while read -r line; do
                if [[ $line == spec.add_*dependency* ]]; then
                    gem=$(echo "$line" | awk '{print $2}' | sed 's/"//g')
                    state=$(echo "$line" | awk '{print $3}' | sed 's/[",]//g')
                    version=$(echo "$line" | awk '{print $4}' | sed 's/[",]//g')
                    echo -e "GEM:$gem Version:$version,  State:$state\n"

                    if [[ "$state" == "~>"* || "$state" == ">="* || "$state" == "<="* || "$state" == "<"* || "$state" == ">"* ]]; then
                        echo -e "Dependency ${gem} does not have a fixed version\n "
                    else
                        echo -e "Dependency ${gem} does has a fixed version\n "
                    fi
                fi
            done < $gemspec_file

            cd ..
            rm -rf "$(basename "$repository" .git)"
            
          done
