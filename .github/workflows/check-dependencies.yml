name: Check Dependencies

on:
  workflow_dispatch:
    inputs:
      repositories-file:
        description: 'Path to the file that contains the repositories to check'
        required: true
        default: 'repositories-to-check.txt'

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read repositories file
        id: read-repositories-file
        run: |
          ls
          echo "repositories=$(cat ${{ inputs.repositories-file }})" >> $GITHUB_ENV
          # export repositories=$(cat ${{ inputs.repositories-file }})
          # printenv
     
      - name: Check dependencies
        id: check-dependencies
        env:
          repositories_col: ${{ env.repositories }}
        run: |
          has_fixed_versions=true
          
          for repository in $repositories_col; do

            git clone "https://github.com/rumannotkazi/$repository.git"
            cd "$(basename "$repository" .git)"
            gemspec_file=$(find . -type f -name '*.gemspec' -print -quit)
            if [[ -z $gemspec_file ]]; then
              echo "No .gemspec file found in $repository"
              exit 1
            fi
            
            echo "REPOSITORY BEING CHECKED : $repository" 
            gemspec_dependencies=($(grep "^ *spec.add_*" "$gemspec_file" | awk '{print $2, $3, $5}'))
            
            echo -e "GEMSPEC file being checked: $gemspec_file\n"
            
            while read -r line; do
                if [[ $line == spec.add_*dependency* ]]; then
                    dependency_type=""
                    if [[ $line == spec.add_development* ]]; then
                        dependency_type="Development"
                    fi
                    if [[ $line == spec.add_runtime* ]]; then
                        dependency_type="Runtime"
                    fi
                    gem=$(echo "$line" | awk '{gsub(/,/,"",$2); print $2}' | sed 's/"//g')
                    state=$(echo "$line" | awk '{print $3}' | sed 's/[",]//g')
                    version=$(echo "$line" | awk '{print $4}' | sed 's/[",]//g')

                    if [[ "$state" == "~>"* || "$state" == ">="* || "$state" == "<="* || "$state" == "<"* || "$state" == ">"* ]]; then
                        echo -e "$repository: $dependency_type Dependency '${gem}' does not have a fixed version "
                        echo -e " -> GEM:$gem State:$state, Version:$version"
                        has_fixed_versions=false
                    fi

                    if [[ ${repositories[@]} =~ $gem ]]; then
                      echo -e "$gem : Tool exists\n"
                      tags=$(git ls-remote --tags "https://github.com/rumannotkazi/test-ruby-tool-2.git")
                      # Extract the latest tag
                      latest_tag=$(echo "$tags" | awk '{ print $2 }' | grep -v '{}' | sort -V | tail -n1 | sed 's|refs/tags/||')
                      # Print the latest tag
                      echo "Current Tag: $version, Latest tag: $latest_tag"
                    else
                      echo -e "$gem : Tool Doesn't exist\n"
                    fi
                fi
            done < $gemspec_file
            cd ..
            rm -rf "$(basename "$repository" .git)"
            echo -e "--------------------------------------------\n"
          done

          if ! $has_fixed_versions; then
            echo "At least one tool has dependency not fixed"
            exit 1
          fi
