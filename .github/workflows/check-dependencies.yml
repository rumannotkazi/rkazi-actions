name: Check Dependencies

on:
  workflow_dispatch:
    inputs:
      repositories-file:
        description: 'Path to the file that contains the repositories to check'
        required: true
        default: 'repositories-to-check.txt'

jobs:
  check-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read repositories file
        id: read-repositories-file
        run: |
          ls
          echo "repositories=$(cat ${{ inputs.repositories-file }})" >> $GITHUB_ENV
          # export repositories=$(cat ${{ inputs.repositories-file }})
          printenv
     
      - name: Check dependencies
        id: check-dependencies
        env:
          repositories_col: ${{ env.repositories}}
        run: |
          for repository in $repositories_col; do
            git clone "https://github.com/$repository.git"
            cd "$(basename "$repository" .git)"
            gemspec_file=$(find . -type f -name '*.gemspec' -print -quit)
            if [[ -z $gemspec_file ]]; then
              echo "No .gemspec file found in $repository"
              exit 1
            fi
            
            gemspec_dependencies=($(grep "^ *spec.add_development_dependency" "$gemspec_file" | awk '{print $2,$3,$5}'))
            
            # Loop through the dependencies and check if they have a fixed version
            for dependency in "${gemspec_dependencies[@]}"; do
              echo "GEMSPEC_DEPENDENCY = $dependency"
              # Parse the dependency string to get the name and version
              name=$(echo "$dependency" | awk '{print $1}')
              version=$(echo "$dependency" | awk -F'[",]' '{print $2}')
              echo "GEM: $name, Version: $version "
              # Check if the version has a fixed version
              if [[ "$version" == "~>"* || "$version" == ">="* || "$version" == "<="* || "$version" == "<"* || "$version" == ">"* ]]; then
                echo "Dependency ${name} in $repository does not have a fixed version"
                exit 1
              fi
            done


            cd ..
            rm -rf "$(basename "$repository" .git)"
            echo "$dependencies"
          done
